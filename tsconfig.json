{
	/*
    TypeScript is being used to do type checking across both JavaScript and TypeScript files.
    In particular, this picks up some problems in the JSDoc in the JavaScript files, and validates the code
    is consistent with the JSDoc.
    
    The settings here are used by VSCode.
    
    See also tsconfig.js.json and tsconfig.ts.json.
  */
	/* Visit https://aka.ms/tsconfig to read more about tsconfig configuration. */
	"compilerOptions": {
		"lib": ["ESNext"],
		"module": "ESNext",
		"target": "ESNext",

		"allowJs": true,
		"checkJs": true,

		/* Strict by default, but dial it down to reduce churn in our JavaScript code. */
		"strict": true,
		"skipLibCheck": true,
		"noFallthroughCasesInSwitch": true,

		"noUnusedLocals": true,
		"noUnusedParameters": true,
		"noPropertyAccessFromIndexSignature": true,
		"useUnknownInCatchVariables": true,

		"moduleResolution": "Bundler",
		"allowImportingTsExtensions": true,
		"verbatimModuleSyntax": true,
		"noEmit": true,

		"forceConsistentCasingInFileNames": true,
		"esModuleInterop": true /* common TypeScript config */
		// "resolveJsonModule": true /* needed for globals in node_modules?! */
	},
	"include": [
		/* JavaScript. Should match includes in tsconfig.js.json. */
		"*.js",
		".prettierrc.js" /* missed by above pattern */,
		"*.mjs",
		"lib/**/*.js",
		/* TypeScript. Should match includes in tsconfig.ts.json. */
		"**/*.ts",
		"**/*.mts"
	],
	"exclude": ["node_modules"]
}
